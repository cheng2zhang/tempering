diff -u -wdB minmod_old/Controller.C minmod_new/Controller.C
--- minmod_old/Controller.C	2015-12-17 15:22:03.000000000 -0600
+++ minmod_new/Controller.C	2016-06-22 15:59:57.879448701 -0500
@@ -1891,6 +1891,8 @@
         dT += adaptTempT;
         // Check again, if not then keep original adaptTempTor assign random.
         if ( dT > 1./adaptTempBetaMin ) {
+          dT = adaptTempT;
+          /*
           if (!simParams->adaptTempRandom) {             
              //iout << iWARN << "ADAPTEMP: " << step << " T= " << dT 
              //     << " K higher than adaptTempTmax."
@@ -1905,8 +1907,11 @@
              dT = adaptTempBetaMin +  random->uniform()*(adaptTempBetaMax-adaptTempBetaMin);             
              dT = 1./dT;
           }
+          */
         } 
         else if ( dT  < 1./adaptTempBetaMax ) {
+          dT = adaptTempT;
+          /*
           if (!simParams->adaptTempRandom) {            
             //iout << iWARN << "ADAPTEMP: " << step << " T= "<< dT 
             //     << " K lower than adaptTempTmin."
@@ -1920,6 +1925,7 @@
             dT = adaptTempBetaMin +  random->uniform()*(adaptTempBetaMax-adaptTempBetaMin);
             dT = 1./dT;
           }
+          */
         }
         else if (adaptTempAutoDt) {
           //update temperature step size counter
diff -u -wdB minmod_old/Sequencer.C minmod_new/Sequencer.C
--- minmod_old/Sequencer.C	2016-06-01 17:24:35.531579311 -0500
+++ minmod_new/Sequencer.C	2016-06-22 15:58:54.953742221 -0500
@@ -1194,7 +1194,11 @@
    }
    // Get Updated Temperature
    if ( !(step % simParams->adaptTempFreq ) && (step > simParams->firstTimestep ))
+   {
+    BigReal adaptTempTOld = adaptTempT;
     adaptTempT = broadcast->adaptTemperature.get(step);
+    rescaleVelocitiesByFactor( sqrt(adaptTempT / adaptTempTOld) );
+   }
 }
 
 void Sequencer::reassignVelocities(BigReal timestep, int step)
